Index: src/TreasureHunter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Scanner;\r\n\r\n/**\r\n * This class is responsible for controlling the Treasure Hunter game.<p>\r\n * It handles the display of the menu and the processing of the player's choices.<p>\r\n * It handles all the display based on the messages it receives from the Town object. <p>\r\n *\r\n * This code has been adapted from Ivan Turner's original program -- thank you Mr. Turner!\r\n */\r\n\r\npublic class TreasureHunter {\r\n    // static variables\r\n    private static final Scanner SCANNER = new Scanner(System.in);\r\n\r\n    // instance variables\r\n    private Town currentTown;\r\n    private Hunter hunter;\r\n    private boolean hardMode;\r\n\r\n    private boolean testMode;\r\n\r\n    private boolean easyMode;\r\n\r\n    /**\r\n     * Constructs the Treasure Hunter game.\r\n     */\r\n    public TreasureHunter() {\r\n        // these will be initialized in the play method\r\n        currentTown = null;\r\n        hunter = null;\r\n        hardMode = false;\r\n        easyMode = false;\r\n    }\r\n\r\n    /**\r\n     * Starts the game; this is the only public method\r\n     */\r\n    public void play() {\r\n        welcomePlayer();\r\n        enterTown();\r\n        showMenu();\r\n    }\r\n\r\n    /**\r\n     * Creates a hunter object at the beginning of the game and populates the class member variable with it.\r\n     */\r\n    private void welcomePlayer() {\r\n        System.out.println(\"Welcome to \" + Colors.CYAN + \"TREASURE HUNTER\" + Colors.RESET + \"!\");\r\n        System.out.println(\"Going hunting for the big treasure, eh?\");\r\n        System.out.print(\"What's your name, Hunter? \");\r\n        String name = SCANNER.nextLine().toLowerCase();\r\n\r\n        // set hunter instance variable\r\n        hunter = new Hunter(name, 10);\r\n\r\n        System.out.print(\"Easy, Normal , or Hard difficulty: \");\r\n        String hard = SCANNER.nextLine().toLowerCase();\r\n        if (hard.equals(\"h\")) {\r\n            hardMode = true;\r\n        }\r\n        if (hard.equals(\"test\")) {\r\n            testMode = true;\r\n        }\r\n        if (hard.equals(\"e\")) {\r\n            easyMode = true;\r\n        }\r\n        if (testMode) {\r\n            hunter.changeGold(90);\r\n            hunter.addItem(\"water\");\r\n            hunter.addItem(\"rope\");\r\n            hunter.addItem(\"machete\");\r\n            hunter.addItem(\"horse\");\r\n            hunter.addItem(\"boat\");\r\n            hunter.addItem(\"boots\");\r\n        }\r\n\r\n        if (easyMode) {\r\n            hunter.changeGold(10);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a new town and adds the Hunter to it.\r\n     */\r\n    private void enterTown() {\r\n        double markdown = 0.25;\r\n        double toughness = 0.4;\r\n        if (hardMode) {\r\n            // in hard mode, you get less money back when you sell items\r\n            markdown = 0.5;\r\n\r\n            // and the town is \"tougher\"\r\n            toughness = 0.75;\r\n        }\r\n\r\n        if (easyMode) {\r\n            markdown = 1;\r\n            toughness = 0.1;\r\n        }\r\n\r\n        // note that we don't need to access the Shop object\r\n        // outside of this method, so it isn't necessary to store it as an instance\r\n        // variable; we can leave it as a local variable\r\n        Shop shop = new Shop(markdown);\r\n\r\n        // creating the new Town -- which we need to store as an instance\r\n        // variable in this class, since we need to access the Town\r\n        // object in other methods of this class\r\n        currentTown = new Town(shop, toughness);\r\n\r\n        // calling the hunterArrives method, which takes the Hunter\r\n        // as a parameter; note this also could have been done in the\r\n        // constructor for Town, but this illustrates another way to associate\r\n        // an object with an object of a different class\r\n        currentTown.hunterArrives(hunter);\r\n    }\r\n\r\n    /**\r\n     * Displays the menu and receives the choice from the user.<p>\r\n     * The choice is sent to the processChoice() method for parsing.<p>\r\n     * This method will loop until the user chooses to exit.\r\n     */\r\n    private void showMenu() {\r\n        String choice = \"\";\r\n\r\n        while (!choice.equals(\"x\")) {\r\n            System.out.println();\r\n            System.out.println(currentTown.getLatestNews());\r\n            System.out.println(\"***\");\r\n            System.out.println(hunter);\r\n            System.out.println(currentTown);\r\n            System.out.println(\"(B)uy something at the shop.\");\r\n            System.out.println(\"(S)ell something at the shop.\");\r\n            System.out.println(\"(M)ove on to a different town.\");\r\n            System.out.println(\"(L)ook for trouble!\");\r\n            System.out.println(\"(H)unt for treasure!\");\r\n            System.out.println(\"(D)ig for gold!\");\r\n            System.out.println(\"Give up the hunt and e(X)it.\");\r\n            System.out.println();\r\n            System.out.print(\"What's your next move? \");\r\n            choice = SCANNER.nextLine().toLowerCase();\r\n            processChoice(choice);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Takes the choice received from the menu and calls the appropriate method to carry out the instructions.\r\n     * @param choice The action to process.\r\n     */\r\n    private void processChoice(String choice) {\r\n        if (choice.equals(\"b\") || choice.equals(\"s\")) {\r\n            currentTown.enterShop(choice);\r\n        } else if (choice.equals(\"m\")) {\r\n            if (currentTown.leaveTown()) {\r\n                // This town is going away so print its news ahead of time.\r\n                System.out.println(currentTown.getLatestNews());\r\n                enterTown();\r\n            }\r\n        } else if (choice.equals(\"l\")) {\r\n            currentTown.lookForTrouble();\r\n        } else if (choice.equals(\"h\")) {\r\n            currentTown.treasureHunt();\r\n        } else if (choice.equals(\"d\")) {\r\n            currentTown.shovel();\r\n        } else if (choice.equals(\"x\")) {\r\n            System.out.println(\"Fare thee well, \" + hunter.getHunterName() + \"!\");\r\n        } else {\r\n            System.out.println(\"Yikes! That's an invalid option! Try again.\");\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/TreasureHunter.java b/src/TreasureHunter.java
--- a/src/TreasureHunter.java	(revision 64bfd77abd437eb303f7023e189bb3fa4f1b664e)
+++ b/src/TreasureHunter.java	(date 1703094874020)
@@ -83,11 +83,11 @@
      * Creates a new town and adds the Hunter to it.
      */
     private void enterTown() {
-        double markdown = 0.25;
+        double markdown = 0.5;
         double toughness = 0.4;
         if (hardMode) {
             // in hard mode, you get less money back when you sell items
-            markdown = 0.5;
+            markdown = 0.25;
 
             // and the town is "tougher"
             toughness = 0.75;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"747d3890-cf30-4638-b561-cee05744fd51\" name=\"Changes\" comment=\"Th-5B Done\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_19_2023_1_49_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_19_2023_1_49_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Hunter.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Hunter.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GithubDefaultAccount\">\r\n    <option name=\"defaultAccountId\" value=\"ae5829ce-d7ba-414a-b0e4-59fe03c5a614\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2Zj6uqY5D3XQztlciYrxqYum0SN\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"747d3890-cf30-4638-b561-cee05744fd51\" name=\"Changes\" comment=\"\" />\r\n      <created>1702923366649</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702923366649</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"inital commit\">\r\n      <created>1702923662226</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702923662226</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"testing\">\r\n      <created>1702923888247</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702923888248</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"TH-1 Done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702939631374</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702939631374</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"TH-2 Done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702940392567</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702940392567</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Th-5B Done\">\r\n      <created>1703012205420</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703012205420</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"6\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"inital commit\" />\r\n    <MESSAGE value=\"testing\" />\r\n    <MESSAGE value=\"TH-1 Done\" />\r\n    <MESSAGE value=\"TH-2 Done\" />\r\n    <MESSAGE value=\"Th-5B Done\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Th-5B Done\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 64bfd77abd437eb303f7023e189bb3fa4f1b664e)
+++ b/.idea/workspace.xml	(date 1703094855795)
@@ -5,8 +5,12 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="747d3890-cf30-4638-b561-cee05744fd51" name="Changes" comment="Th-5B Done">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_18_2023_1_37_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_18_2023_1_37_PM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_18_2023_1_56_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_18_2023_1_56_PM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_19_2023_1_00_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_19_2023_1_00_PM__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_19_2023_1_49_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_19_2023_1_49_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Hunter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Hunter.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/TreasureHunter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/TreasureHunter.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
